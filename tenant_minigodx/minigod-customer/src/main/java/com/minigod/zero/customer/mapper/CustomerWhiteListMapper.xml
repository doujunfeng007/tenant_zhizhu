<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minigod.zero.customer.mapper.CustomerWhiteListMapper">

    <resultMap id="BaseResultMap" type="com.minigod.zero.customer.entity.CustomerWhiteList">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="tenantId" column="tenant_id" jdbcType="VARCHAR"/>
            <result property="custId" column="cust_id" jdbcType="BIGINT"/>
            <result property="accountId" column="account_id" jdbcType="INTEGER"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="creator" column="creator" jdbcType="BIGINT"/>
            <result property="creatorName" column="creator_name" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="INTEGER"/>
            <result property="idDeleted" column="id_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,tenant_id,cust_id,
        account_id,create_time,creator,
        creator_name,status,id_deleted
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from customer_white_list
        where  id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from customer_white_list
        where  id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.minigod.zero.customer.entity.CustomerWhiteList" useGeneratedKeys="true">
        insert into customer_white_list
        ( id,tenant_id,cust_id
        ,account_id,create_time,creator
        ,creator_name,status,id_deleted
        )
        values (#{id,jdbcType=INTEGER},#{tenantId,jdbcType=VARCHAR},#{custId,jdbcType=BIGINT}
        ,#{accountId,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},#{creator,jdbcType=BIGINT}
        ,#{creatorName,jdbcType=VARCHAR},#{status,jdbcType=INTEGER},#{idDeleted,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.zero.customer.entity.CustomerWhiteList" useGeneratedKeys="true">
        insert into customer_white_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="tenantId != null">tenant_id,</if>
                <if test="custId != null">cust_id,</if>
                <if test="accountId != null">account_id,</if>
                <if test="createTime != null">create_time,</if>
                <if test="creator != null">creator,</if>
                <if test="creatorName != null">creator_name,</if>
                <if test="status != null">status,</if>
                <if test="idDeleted != null">id_deleted,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="tenantId != null">#{tenantId,jdbcType=VARCHAR},</if>
                <if test="custId != null">#{custId,jdbcType=BIGINT},</if>
                <if test="accountId != null">#{accountId,jdbcType=INTEGER},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="creator != null">#{creator,jdbcType=BIGINT},</if>
                <if test="creatorName != null">#{creatorName,jdbcType=VARCHAR},</if>
                <if test="status != null">#{status,jdbcType=INTEGER},</if>
                <if test="idDeleted != null">#{idDeleted,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.minigod.zero.customer.entity.CustomerWhiteList">
        update customer_white_list
        <set>
                <if test="tenantId != null">
                    tenant_id = #{tenantId,jdbcType=VARCHAR},
                </if>
                <if test="custId != null">
                    cust_id = #{custId,jdbcType=BIGINT},
                </if>
                <if test="accountId != null">
                    account_id = #{accountId,jdbcType=INTEGER},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="creator != null">
                    creator = #{creator,jdbcType=BIGINT},
                </if>
                <if test="creatorName != null">
                    creator_name = #{creatorName,jdbcType=VARCHAR},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=INTEGER},
                </if>
                <if test="idDeleted != null">
                    id_deleted = #{idDeleted,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.minigod.zero.customer.entity.CustomerWhiteList">
        update customer_white_list
        set
            tenant_id =  #{tenantId,jdbcType=VARCHAR},
            cust_id =  #{custId,jdbcType=BIGINT},
            account_id =  #{accountId,jdbcType=INTEGER},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            creator =  #{creator,jdbcType=BIGINT},
            creator_name =  #{creatorName,jdbcType=VARCHAR},
            status =  #{status,jdbcType=INTEGER},
            id_deleted =  #{idDeleted,jdbcType=INTEGER}
        where   id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByCustId" parameterType="java.lang.Object" resultMap="BaseResultMap">
        select * from customer_white_list where  tenant_id =  #{tenantId} and cust_id =  #{custId} and status = 0
    </select>

    <select id="queryCustomerWhiteListPage" parameterType="java.lang.Object" resultType="com.minigod.zero.customer.vo.CustomerWhiteListVO">
        select
            ci.id as custId,
            CONCAT_WS('+',ci.area_code,ci.cell_phone) as phone,
            cbi.client_name as name,
            CONCAT_WS('+',cbi.phone_area,cbi.phone_number) as openPhone,
            CONCAT(cbi.family_name_spell,cbi.given_name_spell) as enName,
            cbi.create_time as openAccountTime,
            cbi.email as openEmail,
            cwl.status as status,
            cwl.account_id as accountId
        from customer_white_list as cwl
        left join customer_info as ci on ci.id = cwl.cust_id
        left join customer_basic_info cbi on ci.id = cbi.cust_id
        <where>
            <if test="keyword != null and keyword != ''">
                and (
                or ci.cell_phone = #{keyword}
                or cbi.phone_number = #{keyword}
                or cbi.client_name like concat('%',#{keyword},'%')
                or cbi.given_name_spell like concat('%',#{keyword},'%')
                )
            </if>
            and cwl.status = 0
        </where>
        order by cwl.create_time desc
    </select>
</mapper>
