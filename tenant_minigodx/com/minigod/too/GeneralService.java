
package com.minigod.too;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "GeneralService", targetNamespace = "http://webservice.g3sb.afe.com", wsdlLocation = "http://g3back.afe-solutions.com:8080/g3sb_webservice/services/GeneralService?wsdl")
public class GeneralService
    extends Service
{

    private final static URL GENERALSERVICE_WSDL_LOCATION;
    private final static WebServiceException GENERALSERVICE_EXCEPTION;
    private final static QName GENERALSERVICE_QNAME = new QName("http://webservice.g3sb.afe.com", "GeneralService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://g3back.afe-solutions.com:8080/g3sb_webservice/services/GeneralService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        GENERALSERVICE_WSDL_LOCATION = url;
        GENERALSERVICE_EXCEPTION = e;
    }

    public GeneralService() {
        super(__getWsdlLocation(), GENERALSERVICE_QNAME);
    }

    public GeneralService(WebServiceFeature... features) {
        super(__getWsdlLocation(), GENERALSERVICE_QNAME, features);
    }

    public GeneralService(URL wsdlLocation) {
        super(wsdlLocation, GENERALSERVICE_QNAME);
    }

    public GeneralService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, GENERALSERVICE_QNAME, features);
    }

    public GeneralService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GeneralService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns GeneralServicePortType
     */
    @WebEndpoint(name = "GeneralServiceHttpSoap11Endpoint")
    public GeneralServicePortType getGeneralServiceHttpSoap11Endpoint() {
        return super.getPort(new QName("http://webservice.g3sb.afe.com", "GeneralServiceHttpSoap11Endpoint"), GeneralServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GeneralServicePortType
     */
    @WebEndpoint(name = "GeneralServiceHttpSoap11Endpoint")
    public GeneralServicePortType getGeneralServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice.g3sb.afe.com", "GeneralServiceHttpSoap11Endpoint"), GeneralServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (GENERALSERVICE_EXCEPTION!= null) {
            throw GENERALSERVICE_EXCEPTION;
        }
        return GENERALSERVICE_WSDL_LOCATION;
    }

}
