<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minigod.zero.data.mapper.FinancingAccountAmountMapper">

    <resultMap id="BaseResultMap" type="com.minigod.zero.data.entity.FinancingAccountAmount">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="accountId" column="account_id" jdbcType="VARCHAR"/>
            <result property="availableAmount" column="available_amount" jdbcType="DECIMAL"/>
            <result property="freezeAmount" column="freeze_amount" jdbcType="DECIMAL"/>
            <result property="transitedAmount" column="transited_amount" jdbcType="DECIMAL"/>
            <result property="currency" column="currency" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,account_id,available_amount,
        freeze_amount,transited_amount,currency,
        create_time,update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from financing_account_amount
        where  id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from financing_account_amount
        where  id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.minigod.zero.data.entity.FinancingAccountAmount" useGeneratedKeys="true">
        insert into financing_account_amount
        ( id,account_id,available_amount
        ,freeze_amount,transited_amount,currency
        ,create_time,update_time)
        values (#{id,jdbcType=BIGINT},#{accountId,jdbcType=VARCHAR},#{availableAmount,jdbcType=DECIMAL}
        ,#{freezeAmount,jdbcType=DECIMAL},#{transitedAmount,jdbcType=DECIMAL},#{currency,jdbcType=VARCHAR}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.zero.data.entity.FinancingAccountAmount" useGeneratedKeys="true">
        insert into financing_account_amount
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="accountId != null">account_id,</if>
                <if test="availableAmount != null">available_amount,</if>
                <if test="freezeAmount != null">freeze_amount,</if>
                <if test="transitedAmount != null">transited_amount,</if>
                <if test="currency != null">currency,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="accountId != null">#{accountId,jdbcType=VARCHAR},</if>
                <if test="availableAmount != null">#{availableAmount,jdbcType=DECIMAL},</if>
                <if test="freezeAmount != null">#{freezeAmount,jdbcType=DECIMAL},</if>
                <if test="transitedAmount != null">#{transitedAmount,jdbcType=DECIMAL},</if>
                <if test="currency != null">#{currency,jdbcType=VARCHAR},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.minigod.zero.data.entity.FinancingAccountAmount">
        update financing_account_amount
        <set>
                <if test="accountId != null">
                    account_id = #{accountId,jdbcType=VARCHAR},
                </if>
                <if test="availableAmount != null">
                    available_amount = #{availableAmount,jdbcType=DECIMAL},
                </if>
                <if test="freezeAmount != null">
                    freeze_amount = #{freezeAmount,jdbcType=DECIMAL},
                </if>
                <if test="transitedAmount != null">
                    transited_amount = #{transitedAmount,jdbcType=DECIMAL},
                </if>
                <if test="currency != null">
                    currency = #{currency,jdbcType=VARCHAR},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.minigod.zero.data.entity.FinancingAccountAmount">
        update financing_account_amount
        set
            account_id =  #{accountId,jdbcType=VARCHAR},
            available_amount =  #{availableAmount,jdbcType=DECIMAL},
            freeze_amount =  #{freezeAmount,jdbcType=DECIMAL},
            transited_amount =  #{transitedAmount,jdbcType=DECIMAL},
            currency =  #{currency,jdbcType=VARCHAR},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
