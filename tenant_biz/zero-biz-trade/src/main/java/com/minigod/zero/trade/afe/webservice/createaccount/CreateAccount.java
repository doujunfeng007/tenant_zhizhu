package com.minigod.zero.trade.afe.webservice.createaccount;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2024-07-09T10:33:25.816+08:00
 * Generated source version: 3.2.6
 *
 */
@WebServiceClient(name = "CreateAccount",
                  wsdlLocation = "http://218.189.34.216:9081/g3sb_webservice/services/CreateAccount?wsdl",
                  targetNamespace = "http://webservice.g3sb.afe.com")
public class CreateAccount extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://webservice.g3sb.afe.com", "CreateAccount");
    public final static QName CreateAccountHttpSoap11Endpoint = new QName("http://webservice.g3sb.afe.com", "CreateAccountHttpSoap11Endpoint");
    public final static QName CreateAccountHttpEndpoint = new QName("http://webservice.g3sb.afe.com", "CreateAccountHttpEndpoint");
    public final static QName CreateAccountHttpSoap12Endpoint = new QName("http://webservice.g3sb.afe.com", "CreateAccountHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("http://218.189.34.216:9081/g3sb_webservice/services/CreateAccount?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(CreateAccount.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://218.189.34.216:9081/g3sb_webservice/services/CreateAccount?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public CreateAccount(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public CreateAccount(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CreateAccount() {
        super(WSDL_LOCATION, SERVICE);
    }

    public CreateAccount(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public CreateAccount(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public CreateAccount(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns CreateAccountPortType
     */
    @WebEndpoint(name = "CreateAccountHttpSoap11Endpoint")
    public CreateAccountPortType getCreateAccountHttpSoap11Endpoint() {
        return super.getPort(CreateAccountHttpSoap11Endpoint, CreateAccountPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CreateAccountPortType
     */
    @WebEndpoint(name = "CreateAccountHttpSoap11Endpoint")
    public CreateAccountPortType getCreateAccountHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(CreateAccountHttpSoap11Endpoint, CreateAccountPortType.class, features);
    }


    /**
     *
     * @return
     *     returns CreateAccountPortType
     */
    @WebEndpoint(name = "CreateAccountHttpEndpoint")
    public CreateAccountPortType getCreateAccountHttpEndpoint() {
        return super.getPort(CreateAccountHttpEndpoint, CreateAccountPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CreateAccountPortType
     */
    @WebEndpoint(name = "CreateAccountHttpEndpoint")
    public CreateAccountPortType getCreateAccountHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(CreateAccountHttpEndpoint, CreateAccountPortType.class, features);
    }


    /**
     *
     * @return
     *     returns CreateAccountPortType
     */
    @WebEndpoint(name = "CreateAccountHttpSoap12Endpoint")
    public CreateAccountPortType getCreateAccountHttpSoap12Endpoint() {
        return super.getPort(CreateAccountHttpSoap12Endpoint, CreateAccountPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CreateAccountPortType
     */
    @WebEndpoint(name = "CreateAccountHttpSoap12Endpoint")
    public CreateAccountPortType getCreateAccountHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(CreateAccountHttpSoap12Endpoint, CreateAccountPortType.class, features);
    }

}
