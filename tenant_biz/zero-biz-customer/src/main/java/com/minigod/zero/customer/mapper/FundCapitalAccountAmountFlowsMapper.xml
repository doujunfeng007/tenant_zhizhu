<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minigod.zero.customer.mapper.FundCapitalAccountAmountFlowsMapper">

    <resultMap id="BaseResultMap" type="com.minigod.zero.customer.entity.FundCapitalAccountAmountFlows">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="fundAccount" column="fund_account" jdbcType="VARCHAR"/>
            <result property="beforeAmount" column="before_amount" jdbcType="DECIMAL"/>
            <result property="amount" column="amount" jdbcType="DECIMAL"/>
            <result property="afterAmount" column="after_amount" jdbcType="DECIMAL"/>
            <result property="currency" column="currency" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="remark" column="remark" jdbcType="VARCHAR"/>
            <result property="type" column="type" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,fund_account,before_amount,
        amount,after_amount,currency,
        create_time,remark,type
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from fund_capital_account_amount_flows
        where  id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from fund_capital_account_amount_flows
        where  id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.minigod.zero.customer.entity.FundCapitalAccountAmountFlows" useGeneratedKeys="true">
        insert into fund_capital_account_amount_flows
        ( id,fund_account,before_amount
        ,amount,after_amount,currency
        ,create_time,remark,type
        )
        values (#{id,jdbcType=INTEGER},#{fundAccount,jdbcType=VARCHAR},#{beforeAmount,jdbcType=DECIMAL}
        ,#{amount,jdbcType=DECIMAL},#{afterAmount,jdbcType=DECIMAL},#{currency,jdbcType=VARCHAR}
        ,#{createTime,jdbcType=TIMESTAMP},#{remark,jdbcType=VARCHAR},#{type,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.zero.customer.entity.FundCapitalAccountAmountFlows" useGeneratedKeys="true">
        insert into fund_capital_account_amount_flows
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="fundAccount != null">fund_account,</if>
                <if test="beforeAmount != null">before_amount,</if>
                <if test="amount != null">amount,</if>
                <if test="afterAmount != null">after_amount,</if>
                <if test="currency != null">currency,</if>
                <if test="createTime != null">create_time,</if>
                <if test="remark != null">remark,</if>
                <if test="type != null">type,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="fundAccount != null">#{fundAccount,jdbcType=VARCHAR},</if>
                <if test="beforeAmount != null">#{beforeAmount,jdbcType=DECIMAL},</if>
                <if test="amount != null">#{amount,jdbcType=DECIMAL},</if>
                <if test="afterAmount != null">#{afterAmount,jdbcType=DECIMAL},</if>
                <if test="currency != null">#{currency,jdbcType=VARCHAR},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="remark != null">#{remark,jdbcType=VARCHAR},</if>
                <if test="type != null">#{type,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.minigod.zero.customer.entity.FundCapitalAccountAmountFlows">
        update fund_capital_account_amount_flows
        <set>
                <if test="fundAccount != null">
                    fund_account = #{fundAccount,jdbcType=VARCHAR},
                </if>
                <if test="beforeAmount != null">
                    before_amount = #{beforeAmount,jdbcType=DECIMAL},
                </if>
                <if test="amount != null">
                    amount = #{amount,jdbcType=DECIMAL},
                </if>
                <if test="afterAmount != null">
                    after_amount = #{afterAmount,jdbcType=DECIMAL},
                </if>
                <if test="currency != null">
                    currency = #{currency,jdbcType=VARCHAR},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="remark != null">
                    remark = #{remark,jdbcType=VARCHAR},
                </if>
                <if test="type != null">
                    type = #{type,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.minigod.zero.customer.entity.FundCapitalAccountAmountFlows">
        update fund_capital_account_amount_flows
        set
            fund_account =  #{fundAccount,jdbcType=VARCHAR},
            before_amount =  #{beforeAmount,jdbcType=DECIMAL},
            amount =  #{amount,jdbcType=DECIMAL},
            after_amount =  #{afterAmount,jdbcType=DECIMAL},
            currency =  #{currency,jdbcType=VARCHAR},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            remark =  #{remark,jdbcType=VARCHAR},
            type =  #{type,jdbcType=INTEGER}
        where   id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
